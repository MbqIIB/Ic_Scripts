<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Proyectos java, maven, alojados en Git&#xd;
Este componente tiene configurados:&#xd;
+ Despliegue opcional mediante WAS tradicional&#xd;
+ Despliegue opcional mediante Urban Code</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>31</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>action</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>build</string>
              <string>deploy</string>
              <string>release</string>
              <string>addFix</string>
              <string>addHotfix</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>gitGroup</name>
          <description>[OBLIGATORIO] - Grupo en Git al que pertenece el componente</description>
          <defaultValue>miGrupo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>branch</name>
          <description>[OBLIGATORIO] - Rama de origen del código para los procesos de build, deploy y release</description>
          <defaultValue>DESARROLLO</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>targetBranch</name>
          <description>[OBLIGATORIO] - Rama de destino del proceso de release; rama de origen y destino del proceso de fix</description>
          <defaultValue>RELEASE</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>maintenanceBranch</name>
          <description>[OBLIGATORIO] - Rama e origen y destino del proceso de hotfix</description>
          <defaultValue>MANTENIMIENTO</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>component</name>
          <description>[OBLIGATORIO] - Nombre del componente en Git</description>
          <defaultValue>MiRepositorio</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>docker_template</name>
          <description>[OBLIGATORIO][DOCKER] - ¡Sin prefijo ni extensión! Plantilla a utilizar si se construye en contenedor</description>
          <defaultValue>XXXXX</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JdkSuffix</name>
          <description>Compilador a utilizar (vacío, JDK7, JDK8)</description>
          <defaultValue>JDK7</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>executionUuid</name>
          <description>[OPCIONAL][QUVE] - Este parámetro lo informa QUVE y sirve para encaminar de vuelta las notificaciones al portal</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>remoteDir</name>
          <description>[OPCIONAL][DESPLIEGUE WAS] - Directorio remoto de copia del EAR</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>earName</name>
          <description>[OPCIONAL][DESPLIEGUE WAS] - ¡Sin extensión! Nombre del EAR</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>userUDeploy</name>
          <description>[OPCIONAL][DESPLIEGUE WAS] - Usuario en la máquina WAS remota</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>passUDeploy</name>
          <description>[OPCIONAL][DESPLIEGUE WAS] - Usuario en la máquina WAS remota</description>
          <defaultValue>Xl7iTxn5E8eTFFp4AjIiZpjL9ibf5DAh/uhL59sP84SyekmP91kBUe1RA7jrr7lE</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>propertiesName</name>
          <description>[OPCIONAL][DESPLIEGUE WAS] - ¡Sin extensión! Normalmente innecesario</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>componenteUrbanCode</name>
          <description>[OPCIONAL][DESPLIEGUE URBAN] - Nombre de componente utilizado por Urban Code para el despliegue</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>makeTag</name>
          <description>Informar si se desea que el proceso haga una etiqueta</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@1.0.3">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>frontal</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>WAS85</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>${JENKINS_HOME}/workspace/${gitGroup}_${component}_${action}</customWorkspace>
  <builders>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.29">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>/jenkins/jobs/ScriptsCore/workspace/groovy/comun/clarive/connectSWC02Script.groovy</scriptFile>
      </scriptSource>
      <bindings></bindings>
      <classpath>/jenkins/jobs/ScriptsCore/workspace/groovy/classes</classpath>
    </hudson.plugins.groovy.SystemGroovy>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ &quot;${action}&quot; != &quot;build&quot; ];then
exit 1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>originBranch=${branch}
gitPath=${gitGroup}/${component}.git
gitHost=${gitHost}
parentWorkspace=${WORKSPACE}
dockerFileId=${docker_template}
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>workflowBuildMavenGit</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ &quot;${action}&quot; != &quot;deploy&quot; ];then
exit 1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>originBranch=${branch}
gitPath=${gitGroup}/${component}.git
gitHost=${gitHost}
parentWorkspace=${WORKSPACE}
dockerFileId=${docker_template}
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>workflowDeployMavenGit</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ &quot;${action}&quot; != &quot;release&quot; ];then
exit 1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>originBranch=${branch}
gitPath=${gitGroup}/${component}.git
gitHost=${gitHost}
parentWorkspace=${WORKSPACE}
dockerFileId=${docker_template}
</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>workflowReleaseMavenGit</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ &quot;${action}&quot; != &quot;addFix&quot; ];then
exit 1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>originBranch=${targetBranch}
gitPath=${gitGroup}/${component}.git
gitHost=${gitHost}
parentWorkspace=${WORKSPACE}
dockerFileId=${docker_template}</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>workflowFixMavenGit</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ &quot;${action}&quot; != &quot;addHotfix&quot; ];then
exit 1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.33">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>originBranch=${maintenanceBranch}
targetBranch=${maintenanceBranch}
gitPath=${gitGroup}/${component}.git
gitHost=${gitHost}
parentWorkspace=${WORKSPACE}
dockerFileId=${docker_template}</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>workflowHotFixMavenGit</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <triggerFromChildProjects>false</triggerFromChildProjects>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <hudson.plugins.templateproject.ProxyPublisher plugin="template-project@1.5.2">
      <projectName>Publisher</projectName>
    </hudson.plugins.templateproject.ProxyPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.33">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>jobInvokerType=components
parentWorkspace=$WORKSPACE
managersMail=gabriel.rodriguez@gexterno.es
buildLabel=$JOB_NAME - $action
MAIL_SUBJECT=$gitGroup -COMP- $component - $action
service=SWC03
tipo_proceso=COMPONENTE
subproducto=${gitGroup}
componentName=${component}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>stepNotifierMail,stepNotifierPortalPlugin,stepNotifierClariveSWC03</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.33">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
  </buildWrappers>
</project>