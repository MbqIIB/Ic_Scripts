<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description>El procedimiento de release:&#13;
&#13;
+ Descarga el código de la corriente de DESARROLLO&#13;
+ Cierra la versión&#13;
+ Construye, pasa unitarias&#13;
+ Pasa calidad&#13;
+ Sube entregable con versión cerrada a Nexus&#13;
+ Entrega los cambios y crea lí­nea base en corriente de RELEASE &#13;
+ Sube el tercer dígito, abre la versión y sube este cambio a DESARROLLO&#13;
+ Crea la instantánea Urban Code correspondiente</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@1.0.3">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>stream</name>
          <description>[OBLIGATORIO] - Corriente de origen del código (debe terminar en DESARROLLO)</description>
          <defaultValue>STREAM_DESARROLLO</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>streamTarget</name>
          <description>[OBLIGATORIO] - Corriente de destino del código (debe terminar en RELEASE)</description>
          <defaultValue>STREAM_RELEASE</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>streamCargaInicial</name>
          <description/>
          <defaultValue>STREAM_DESARROLLO</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>workspaceRTC</name>
          <description/>
          <defaultValue>WSR - ${stream} - RELEASE - IC</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>action</name>
          <description>Acción a ejecutar (build/deploy/release/addFix/addHotfix)</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>release</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>onlyChanges</name>
          <description>Desmarcar para ejecutar el procedimiento de todas formas (aunque no haya habido cambios en RTC)</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>makeSnapshot</name>
          <description>Marcar si se desea etiquetar el código en RTC</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>instantanea</name>
          <description>[OBLIGATORIO] - Nombre de la instantánea a realizar sobre la corriente de release.  También se utiliza como nombre de la ficha de despliegue de Urban Code si procede.</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>componentesRelease</name>
          <description>[OPCIONAL] - Lista de componentes que intervienen en la release, separados por comas.</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>getOrdered</name>
          <description>Marcar si se desea resolver el orden de los componentes y tratar sus dependencias.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>workItem</name>
          <description>[OBLIGATORIO] - Tarea RTC empleada para entregar cambios a corriente</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>executionUuid</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>aplicacionUrbanCode</name>
          <description></description>
          <defaultValue>GIS - Cluster Servicios</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>entornoUrbanCode</name>
          <description></description>
          <defaultValue>DESARROLLO</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>trivial</name>
          <description>Marcar si se desea utilizar la estrategia trivial de generación de instantáneas para Urban Code (es decir: un componente, un entregable, con la versión indicada en el version.txt)</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.27"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>triggers</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>WAS85</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>$JENKINS_HOME/workspace/WKS_MODIFICADA_release</customWorkspace>
  <builders>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.29">
    <scriptSource class="hudson.plugins.groovy.FileScriptSource">
		<scriptFile>/jenkins/jobs/ScriptsCore/workspace/groovy/comun/clarive/connectSWC02Script.groovy</scriptFile>
    </scriptSource>
    <bindings/>
	<classpath>/jenkins/jobs/ScriptsCore/workspace/groovy/classes</classpath>
</hudson.plugins.groovy.SystemGroovy><hudson.plugins.groovy.Groovy plugin="groovy@1.29">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>$JENKINS_HOME/jobs/ScriptsCore/workspace/groovy/comun/jenkins/checkSnapshots.groovy</scriptFile>
      </scriptSource>
      <groovyName>Groovy-1.8.7</groovyName>
      <parameters/>
      <scriptParameters/>
      <properties>param.application=${aplicacionUrbanCode}
param.instantanea=${instantanea}
param.stream=${stream}
param.streamTarget=${streamTarget}
param.rtcUrl=${urlRTC}
param.rtcUser=${userRTC}
param.rtcPass=${pwdRTC}
param.udClientCommand=${UDCLIENT_COMMAND}
param.urlUdeploy=${UDCLIENT_URL}
param.userUdclient=${UDCLIENT_USER}
param.pwdUdclient=${UDCLIENT_PASS}
param.componentsUrban=${componentsUrban}
param.urbanCodeConnection=${URBAN_CONNECTION}</properties>
      <javaOpts/>
      <classPath>/jenkins/jobs/ScriptsCore/workspace/groovy/classes</classPath>
    </hudson.plugins.groovy.Groovy>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.29">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>$JENKINS_HOME/jobs/ScriptsCore/workspace/groovy/comun/jenkins/setJobsFromStream.groovy</scriptFile>
      </scriptSource>
      <bindings/>
      <classpath>/jenkins/jobs/ScriptsCore/workspace/groovy/classes</classpath>
    </hudson.plugins.groovy.SystemGroovy>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ "${jobs}" = "" ] || [ "${BUILD_RESULT}" = "NOT_BUILT" ];
then 
exit -1 
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.26">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>jobInvokerType=streams
create=true
parentWorkspace=${WORKSPACE}</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>stepNotifierPortalCreate</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <block/>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ "${jobs}" = "" ]; then
exit -1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.26">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>listaSkips=${listaSkipsRelease}
workspaceRTC=WSR - ${stream} - RELEASE - IC</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>Trigger_groups</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>echo "makeSnapshot: ${makeSnapshot}"
if [ "${makeSnapshot}" != "true" ] || [ "${jobs}" = "" ]; then
exit -1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.26">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>tagType=snapshot
parentWorkspace=${homeStream}
streamInVersion=true
stream=${streamTarget}
description=JENKINS SNAPSHOT: ${action}
version=local</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>stepRTCTagger</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <block>
              <buildStepFailureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </buildStepFailureThreshold>
              <unstableThreshold>
                <name>UNSTABLE</name>
                <ordinal>1</ordinal>
                <color>YELLOW</color>
                <completeBuild>true</completeBuild>
              </unstableThreshold>
              <failureThreshold>
                <name>FAILURE</name>
                <ordinal>2</ordinal>
                <color>RED</color>
                <completeBuild>true</completeBuild>
              </failureThreshold>
            </block>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
        <command>if [ "${instantanea}" = "" ] || [ "${aplicacionUrbanCode}" = "" ] || [ "${jobs}" = "" ]; then
exit -1
fi</command>
      </condition>
      <buildStep class="hudson.plugins.groovy.SystemGroovy" plugin="groovy@1.29">
        <scriptSource class="hudson.plugins.groovy.FileScriptSource">
          <scriptFile>$JENKINS_HOME/jobs/ScriptsCore/workspace/groovy/comun/jenkins/stepUrbanCodeExecutor.groovy</scriptFile>
        </scriptSource>
        <bindings/>
        <classpath>$JENKINS_HOME/jobs/ScriptsCore/workspace/groovy/classes</classpath>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.26">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>jobInvokerType=streams
parentWorkspace=${WORKSPACE}
componentesRelease=${finalComponentsList}
service=SWC03
tipo_proceso=${action}
subproducto=${stream}
componentName=${component}
version=${version}
id_proceso=${id_proceso}</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>stepNotifierPortal,Trigger_postReleaseBuild,stepNotifierClariveSWC03</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.24">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
  </buildWrappers>
</project>